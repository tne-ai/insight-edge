import pandas as pd
from tne.TNE import TNE

# Initialize the TNE session
session = TNE(uid=UID, bucket_name=BUCKET, project=PROJECT, version=VERSION)

# Load the data
df = session.get_object("handbags-shopping_list-no_run-1_1-with_periods_cleaned.csv")

# Convert 'period' to datetime for easier manipulation
df['period'] = pd.to_datetime(df['period'], format='%Y%m')

# Get the most recent period
most_recent_period = df['period'].max()

# Filter the data for the most recent period
recent_data = df[df['period'] == most_recent_period]

# Calculate the average units sold in prior periods for each style_colour_desc
prior_periods = df[df['period'] < most_recent_period]
average_prior_sales = prior_periods.groupby('style_colour_desc')['sales'].mean().reset_index()
average_prior_sales.columns = ['style_colour_desc', 'average_units_sold_prior_periods']

# Merge the recent data with the average prior sales
merged_data = pd.merge(recent_data, average_prior_sales, on='style_colour_desc', how='left')

# Calculate the percentage increase in sales
merged_data['percentage_increase'] = ((merged_data['sales'] - merged_data['average_units_sold_prior_periods']) / merged_data['average_units_sold_prior_periods']) * 100

# Find the best-selling product in each subcategory based on the highest percentage increase
best_selling_products = merged_data.loc[merged_data.groupby('product_subgroup_desc')['percentage_increase'].idxmax()]

# Select relevant columns to display
result = best_selling_products[['product_subgroup_desc', 'style_colour_desc', 'sales', 'average_units_sold_prior_periods', 'percentage_increase']]

# Limit the result to 12 items
result = result.head(12)