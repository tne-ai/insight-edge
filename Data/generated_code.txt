import pandas as pd
from tne.TNE import TNE

# Initialize TNE session
session = TNE(uid=UID, bucket_name=BUCKET, project=PROJECT, version=VERSION)

# Load data
df = session.get_object("handbags-shopping_list-no_run-1_1-with_periods_cleaned.csv")

# Ensure 'period' column is of integer type for sorting
df['period'] = df['period'].astype(int)

# Filter data for the last period
last_period = df['period'].max()
last_period_df = df[df['period'] == last_period]

# Check if 'rate_of_sale' or 'ROS' field exists in the data source
if 'rate_of_sale' in last_period_df.columns or 'ROS' in last_period_df.columns:
    # Use existing 'rate_of_sale' or 'ROS' field
    if 'rate_of_sale' in last_period_df.columns:
        ros_column = 'rate_of_sale'
    else:
        ros_column = 'ROS'
    # Sort by 'rate_of_sale' or 'ROS' in descending order and select top product
    result = last_period_df.sort_values(by=ros_column, ascending=False)[['style_colour_desc', ros_column]].head(1)
else:
    # Calculate 'rate_of_sale' using the provided formula
    last_period_df['rate_of_sale'] = last_period_df['sales'] / (last_period_df['weeks_selling'] * last_period_df['distinct_store_count'])
    # Sort by calculated 'rate_of_sale' in descending order and select top product
    result = last_period_df.sort_values(by='rate_of_sale', ascending=False)[['style_colour_desc', 'rate_of_sale']].head(1)

# Ensure result is a pd.DataFrame
result = pd.DataFrame(result)

# Store final result in the 'result' variable
result