import pandas as pd
from tne.TNE import TNE

# Initialize TNE session
session = TNE(uid=UID, bucket_name=BUCKET, project=PROJECT, version=VERSION)

# Load data
df = session.get_object("handbags-shopping_list-no_run-1_1-with_periods_cleaned.csv")

# Convert period to datetime and extract month and year
df['period'] = pd.to_datetime(df['period'], format='%Y%m')
df['month'] = df['period'].dt.month
df['year'] = df['period'].dt.year

# Get the last month available in the data
last_month = df['period'].max()
last_month_year = last_month.year
last_month_month = last_month.month

# Filter data for the last month and the same month in the previous year
last_month_df = df[(df['year'] == last_month_year) & (df['month'] == last_month_month)]
prior_year_same_month_df = df[(df['year'] == last_month_year - 1) & (df['month'] == last_month_month)]

# Calculate average sales for the prior like periods within the preceding year
average_prior_sales = prior_year_same_month_df.groupby('style_colour_desc')['sales'].mean().reset_index()
average_prior_sales.columns = ['style_colour_desc', 'average_units_sold_prior_periods']

# Calculate units sold in the current period
current_period_sales = last_month_df[['style_colour_desc', 'sales']].rename(columns={'sales': 'units_sold_current_period'})

# Merge dataframes
merged_df = pd.merge(current_period_sales, average_prior_sales, on='style_colour_desc')

# Calculate underperforming metric (lower percentage increase in unit sales)
merged_df['underperforming'] = (merged_df['units_sold_current_period'] - merged_df['average_units_sold_prior_periods']) / merged_df['average_units_sold_prior_periods']

# Filter underperforming SKUs (bottom 10 by underperforming metric)
underperforming_skus = merged_df.nsmallest(10, 'underperforming')

# Merge with original dataframe to get ending inventory
result = pd.merge(underperforming_skus, last_month_df[['style_colour_desc', 'end_inv']], on='style_colour_desc')
result = result[['style_colour_desc', 'underperforming', 'end_inv']]

# Rename columns for clarity
result.columns = ['SKU', 'Underperformance Metric', 'Ending Inventory']

# Store result in the required variable
result = result